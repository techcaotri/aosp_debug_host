// Generated by protoc-gen-javastream. DO NOT MODIFY.
// source: frameworks/base/core/proto/android/service/power.proto

package android.service.power;

/** @hide */
// message PowerServiceSettingsAndConfigurationDumpProto
public final class PowerServiceSettingsAndConfigurationDumpProto {

    // enum ScreenBrightnessMode
    public static final int SCREEN_BRIGHTNESS_MODE_MANUAL = 0;
    public static final int SCREEN_BRIGHTNESS_MODE_AUTOMATIC = 1;

    // enum DisplayState
    public static final int DISPLAY_STATE_UNKNOWN = 0;
    public static final int DISPLAY_STATE_OFF = 1;
    public static final int DISPLAY_STATE_ON = 2;
    public static final int DISPLAY_STATE_DOZE = 3;
    public static final int DISPLAY_STATE_DOZE_SUSPEND = 4;
    public static final int DISPLAY_STATE_VR = 5;

    // message StayOnWhilePluggedInProto
    public final class StayOnWhilePluggedInProto {

        // optional bool is_stay_on_while_plugged_in_ac = 1;
        public static final long IS_STAY_ON_WHILE_PLUGGED_IN_AC = 0x0000010d00000001L;

        // optional bool is_stay_on_while_plugged_in_usb = 2;
        public static final long IS_STAY_ON_WHILE_PLUGGED_IN_USB = 0x0000010d00000002L;

        // optional bool is_stay_on_while_plugged_in_wireless = 3;
        public static final long IS_STAY_ON_WHILE_PLUGGED_IN_WIRELESS = 0x0000010d00000003L;

    }

    // message ScreenBrightnessSettingLimitsProto
    public final class ScreenBrightnessSettingLimitsProto {

        // optional int32 setting_minimum = 1;
        public static final long SETTING_MINIMUM = 0x0000010300000001L;

        // optional int32 setting_maximum = 2;
        public static final long SETTING_MAXIMUM = 0x0000010300000002L;

        // optional int32 setting_default = 3;
        public static final long SETTING_DEFAULT = 0x0000010300000003L;

        // optional int32 setting_for_vr_default = 4;
        public static final long SETTING_FOR_VR_DEFAULT = 0x0000010300000004L;

    }

    // optional bool is_decouple_hal_auto_suspend_mode_from_display_config = 1;
    public static final long IS_DECOUPLE_HAL_AUTO_SUSPEND_MODE_FROM_DISPLAY_CONFIG = 0x0000010d00000001L;

    // optional bool is_decouple_hal_interactive_mode_from_display_config = 2;
    public static final long IS_DECOUPLE_HAL_INTERACTIVE_MODE_FROM_DISPLAY_CONFIG = 0x0000010d00000002L;

    // optional bool is_wake_up_when_plugged_or_unplugged_config = 3;
    public static final long IS_WAKE_UP_WHEN_PLUGGED_OR_UNPLUGGED_CONFIG = 0x0000010d00000003L;

    // optional bool is_wake_up_when_plugged_or_unplugged_in_theater_mode_config = 4;
    public static final long IS_WAKE_UP_WHEN_PLUGGED_OR_UNPLUGGED_IN_THEATER_MODE_CONFIG = 0x0000010d00000004L;

    // optional bool is_theater_mode_enabled = 5;
    public static final long IS_THEATER_MODE_ENABLED = 0x0000010d00000005L;

    // optional bool is_suspend_when_screen_off_due_to_proximity_config = 6;
    public static final long IS_SUSPEND_WHEN_SCREEN_OFF_DUE_TO_PROXIMITY_CONFIG = 0x0000010d00000006L;

    // optional bool are_dreams_supported_config = 7;
    public static final long ARE_DREAMS_SUPPORTED_CONFIG = 0x0000010d00000007L;

    // optional bool are_dreams_enabled_by_default_config = 8;
    public static final long ARE_DREAMS_ENABLED_BY_DEFAULT_CONFIG = 0x0000010d00000008L;

    // optional bool are_dreams_activated_on_sleep_by_default_config = 9;
    public static final long ARE_DREAMS_ACTIVATED_ON_SLEEP_BY_DEFAULT_CONFIG = 0x0000010d00000009L;

    // optional bool are_dreams_activated_on_dock_by_default_config = 10;
    public static final long ARE_DREAMS_ACTIVATED_ON_DOCK_BY_DEFAULT_CONFIG = 0x0000010d0000000aL;

    // optional bool are_dreams_enabled_on_battery_config = 11;
    public static final long ARE_DREAMS_ENABLED_ON_BATTERY_CONFIG = 0x0000010d0000000bL;

    // optional sint32 dreams_battery_level_minimum_when_powered_config = 12;
    public static final long DREAMS_BATTERY_LEVEL_MINIMUM_WHEN_POWERED_CONFIG = 0x000001070000000cL;

    // optional sint32 dreams_battery_level_minimum_when_not_powered_config = 13;
    public static final long DREAMS_BATTERY_LEVEL_MINIMUM_WHEN_NOT_POWERED_CONFIG = 0x000001070000000dL;

    // optional sint32 dreams_battery_level_drain_cutoff_config = 14;
    public static final long DREAMS_BATTERY_LEVEL_DRAIN_CUTOFF_CONFIG = 0x000001070000000eL;

    // optional bool are_dreams_enabled_setting = 15;
    public static final long ARE_DREAMS_ENABLED_SETTING = 0x0000010d0000000fL;

    // optional bool are_dreams_activate_on_sleep_setting = 16;
    public static final long ARE_DREAMS_ACTIVATE_ON_SLEEP_SETTING = 0x0000010d00000010L;

    // optional bool are_dreams_activate_on_dock_setting = 17;
    public static final long ARE_DREAMS_ACTIVATE_ON_DOCK_SETTING = 0x0000010d00000011L;

    // optional bool is_doze_after_screen_off_config = 18;
    public static final long IS_DOZE_AFTER_SCREEN_OFF_CONFIG = 0x0000010d00000012L;

    // optional bool is_low_power_mode_setting = 19;
    public static final long IS_LOW_POWER_MODE_SETTING = 0x0000010d00000013L;

    // optional bool is_auto_low_power_mode_configured = 20;
    public static final long IS_AUTO_LOW_POWER_MODE_CONFIGURED = 0x0000010d00000014L;

    // optional bool is_auto_low_power_mode_snoozing = 21;
    public static final long IS_AUTO_LOW_POWER_MODE_SNOOZING = 0x0000010d00000015L;

    // optional int32 minimum_screen_off_timeout_config_ms = 22;
    public static final long MINIMUM_SCREEN_OFF_TIMEOUT_CONFIG_MS = 0x0000010300000016L;

    // optional int32 maximum_screen_dim_duration_config_ms = 23;
    public static final long MAXIMUM_SCREEN_DIM_DURATION_CONFIG_MS = 0x0000010300000017L;

    // optional float maximum_screen_dim_ratio_config = 24;
    public static final long MAXIMUM_SCREEN_DIM_RATIO_CONFIG = 0x0000010200000018L;

    // optional int32 screen_off_timeout_setting_ms = 25;
    public static final long SCREEN_OFF_TIMEOUT_SETTING_MS = 0x0000010300000019L;

    // optional sint32 sleep_timeout_setting_ms = 26;
    public static final long SLEEP_TIMEOUT_SETTING_MS = 0x000001070000001aL;

    // optional int32 maximum_screen_off_timeout_from_device_admin_ms = 27;
    public static final long MAXIMUM_SCREEN_OFF_TIMEOUT_FROM_DEVICE_ADMIN_MS = 0x000001030000001bL;

    // optional bool is_maximum_screen_off_timeout_from_device_admin_enforced_locked = 28;
    public static final long IS_MAXIMUM_SCREEN_OFF_TIMEOUT_FROM_DEVICE_ADMIN_ENFORCED_LOCKED = 0x0000010d0000001cL;

    // optional .android.service.power.PowerServiceSettingsAndConfigurationDumpProto.StayOnWhilePluggedInProto stay_on_while_plugged_in = 29;
    public static final long STAY_ON_WHILE_PLUGGED_IN = 0x000001110000001dL;

    // optional sint32 screen_brightness_setting = 30;
    public static final long SCREEN_BRIGHTNESS_SETTING = 0x000001070000001eL;

    // optional float screen_auto_brightness_adjustment_setting = 31;
    public static final long SCREEN_AUTO_BRIGHTNESS_ADJUSTMENT_SETTING = 0x000001020000001fL;

    // optional .android.service.power.PowerServiceSettingsAndConfigurationDumpProto.ScreenBrightnessMode screen_brightness_mode_setting = 32;
    public static final long SCREEN_BRIGHTNESS_MODE_SETTING = 0x0000011000000020L;

    // optional sint32 screen_brightness_override_from_window_manager = 33;
    public static final long SCREEN_BRIGHTNESS_OVERRIDE_FROM_WINDOW_MANAGER = 0x0000010700000021L;

    // optional sint64 user_activity_timeout_override_from_window_manager_ms = 34;
    public static final long USER_ACTIVITY_TIMEOUT_OVERRIDE_FROM_WINDOW_MANAGER_MS = 0x0000010800000022L;

    // optional bool is_user_inactive_override_from_window_manager = 35;
    public static final long IS_USER_INACTIVE_OVERRIDE_FROM_WINDOW_MANAGER = 0x0000010d00000023L;

    // optional sint32 temporary_screen_brightness_setting_override = 36;
    public static final long TEMPORARY_SCREEN_BRIGHTNESS_SETTING_OVERRIDE = 0x0000010700000024L;

    // optional float temporary_screen_auto_brightness_adjustment_setting_override = 37;
    public static final long TEMPORARY_SCREEN_AUTO_BRIGHTNESS_ADJUSTMENT_SETTING_OVERRIDE = 0x0000010200000025L;

    // optional .android.service.power.PowerServiceSettingsAndConfigurationDumpProto.DisplayState doze_screen_state_override_from_dream_manager = 38;
    public static final long DOZE_SCREEN_STATE_OVERRIDE_FROM_DREAM_MANAGER = 0x0000011000000026L;

    // optional float dozed_screen_brightness_override_from_dream_manager = 39;
    public static final long DOZED_SCREEN_BRIGHTNESS_OVERRIDE_FROM_DREAM_MANAGER = 0x0000010200000027L;

    // optional .android.service.power.PowerServiceSettingsAndConfigurationDumpProto.ScreenBrightnessSettingLimitsProto screen_brightness_setting_limits = 40;
    public static final long SCREEN_BRIGHTNESS_SETTING_LIMITS = 0x0000011100000028L;

    // optional int32 screen_brightness_for_vr_setting = 41;
    public static final long SCREEN_BRIGHTNESS_FOR_VR_SETTING = 0x0000010300000029L;

    // optional bool is_double_tap_wake_enabled = 42;
    public static final long IS_DOUBLE_TAP_WAKE_ENABLED = 0x0000010d0000002aL;

    // optional bool is_vr_mode_enabled = 43;
    public static final long IS_VR_MODE_ENABLED = 0x0000010d0000002bL;

}

